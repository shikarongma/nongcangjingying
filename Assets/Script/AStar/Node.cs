using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace MFarm.AStar
{
    //网格节点
    public class Node : IComparable<Node>//比较值，这里比较的是node
    {
        public Vector2Int gridPosition;//网格坐标（这里的坐标是以（0.0）为原点的坐标系下的坐标，不是实际场景的坐标）
        public int gCost = 0;//距离start格子的距离
        public int hCost = 0;//距离Target格子的距离
        public int FCost => gCost + hCost;//当前格子的值
        public bool isObstacle = false;//当前格子是否是障碍
        public Node parentNode;//父节点

        public Node(Vector2Int pos)
        {
            gridPosition = pos;
            parentNode = null;
        }

        public int CompareTo(Node other)
        {
            //比较选出最低的F值，返回-1，0，1
            int result = FCost.CompareTo(other.FCost);
            if (result == 0)
            {
                result = hCost.CompareTo(other.hCost);
            }
            return result;

        }
    }
}

